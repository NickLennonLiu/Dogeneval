filename,question,answer,datetime
UNC_20.9.5/OM参考/命令/UNC工程命令/OPR DBGDATA工程命令/zh-cn_cliref_0000001169753275.txt,"你的任务是根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。
现在请开始回答问题：
已知所有步骤编号和步骤名为
步骤1：UserCheck0
步骤2：UserCheck1
步骤3：UserCheck2
步骤4：UserCheck3
步骤5：UserCheck4
步骤6：UserCheck5
步骤7：UserCheck6
步骤8：UserCheck7
步骤9：informationCollection8
已知当前步骤描述为进行人工操作，检查CloudCG和GSN之间是否有防火墙等。是 => 6。否 => 9。
已知当前步骤的输出为UserCheck4Result
请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。
请先分析分支情况。你的输出应该为：","{'next': [{'condition': '${UserCheck4Result.result == ""是""}', 'action': 'UserCheck5'}, {'condition': '${UserCheck4Result.result == ""否""}', 'action': 'informationCollection8'}]}",09021920
UNC_20.9.5/OM参考/命令/UNC工程命令/通过命令代理执行命令行调试命令（OPR DBGCLICMDPRXY）/display_pm_diagnose.txt,"你的任务是根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。
现在请开始回答问题：
已知所有步骤编号和步骤名为
步骤1：display pm diagnose local
步骤2：display pm diagnose msg
步骤3：display pm diagnose data-queue
步骤4：display pm diagnose bbrun
步骤5：display pm diagnose errinfo
步骤6：display pm diagnose msg-stat
步骤7：display pm diagnose bak-time
已知当前步骤描述为进行人工操作，检查是否需要查看PM组件内部数据信息。是 => 2。否 => 7。
已知当前步骤的输出为UserCheckResult
请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。
请先分析分支情况。你的输出应该为：","{
  ""next"": [
   {
    ""condition"": ""${UserCheckResult.result == \""是\""}"",
    ""action"": ""display pm diagnose msg""
   },
   {
    ""condition"": ""${UserCheckResult.result == \""否\""}"",
    ""action"": ""display pm diagnose bak-time""
   }
  ]
}",09021920
UNC_20.9.5/OM参考/命令/UNC MML命令/平台服务管理/可靠性管理/微服务可靠性管理/set_drcouplingreset.txt,"你的任务是根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。
现在请开始回答问题：
已知所有步骤编号和步骤名为
步骤1：SetDRCouplingReset
步骤2：CheckFunction
步骤3：Notice
已知当前步骤描述为设置是否开启负荷分担容灾功能，是=>步骤2。否=>步骤3。
已知当前步骤的输出为SetDRCouplingResetResult
请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。
请先分析分支情况。你的输出应该为：","{
  ""next"": [
   {
    ""condition"": ""$\{SetDRCouplingResetResult.COUPLINGRESET == \""YES\""}"",
    ""action"": ""CheckFunction""
   },
   {
    ""condition"": ""$\{SetDRCouplingResetResult.COUPLINGRESET == \""NO\""}"",
    ""action"": ""Notice""
   }
  ]
}",09021920
UNC_20.9.5/OM参考/命令/UNC工程命令/DSP DBSTATS参数补充说明/系统视图/zh-cn_topic_0000001256866076.txt,"你的任务是根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。
现在请开始回答问题：
已知所有步骤编号和步骤名为
步骤1：CheckDNStatus
步骤2：CheckResourceType
步骤3：CheckValue
步骤4：CheckOverloadLevel
步骤5：AdjustResources
步骤6：Monitor
步骤7：Report
步骤8：EndTask
已知当前步骤描述为检查DN节点的过载情况，若过载级别大于等于2级，则调整资源分配；否则继续监控。
已知当前步骤的输出为DNOverloadCheckResult
请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。
请先分析分支情况。你的输出应该为：","{
  ""next"": [
   {
    ""condition"": ""${DNOverloadCheckResult.OVERLOAD_LEVEL >= 2}"",
    ""action"": ""AdjustResources""
   },
   {
    ""condition"": ""${DNOverloadCheckResult.OVERLOAD_LEVEL < 2}"",
    ""action"": ""Monitor""
   }
  ]
}",09021920
UNC_20.9.5/OM参考/命令/UNC工程命令/OPR DBGDATA工程命令/zh-cn_cliref_0237807745.txt,"你的任务是根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。
现在请开始回答问题：
已知所有步骤编号和步骤名为
步骤1：UserCheck0
步骤2：UserCheck1
步骤3：UserCheck2
步骤4：UserCheck3
步骤5：UserCheck4
步骤6：UserCheck5
步骤7：UserCheck6
步骤8：UserCheck7
步骤9：informationCollection8
已知当前步骤描述为进行人工操作，检查CloudCG和GSN之间是否有防火墙等。是 => 6。否 => 9。
已知当前步骤的输出为UserCheck4Result
请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。
请先分析分支情况。你的输出应该为：","{
  ""next"": [
   {
    ""condition"": ""${UserCheck4Result.result == \""是\""}"",
    ""action"": ""UserCheck5""
   },
   {
    ""condition"": ""${UserCheck4Result.result == \""否\""}"",
    ""action"": ""informationCollection8""
   }
  ]
}",09021920
UNC_20.9.5/OM参考/命令/UNC工程命令/DSP DBSTATS参数补充说明/系统视图/zh-cn_topic_0000001256706400.txt,"你的任务是根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。
现在请开始回答问题：
已知所有步骤编号和步骤名为
步骤1：CheckTableSchemaVersion
步骤2：AdjustTableSettings
步骤3：MonitorRecordCount
步骤4：EnableDelayDelete
步骤5：ReviewReplicaAttribute
步骤6：VerifyDistributionMode
步骤7：EvaluateTableType
步骤8：SetRecordAlarmThreshold
步骤9：UpdateMaxRecordCount
已知当前步骤描述为检查表的schema版本是否正确。是 => 2。否 => 诊断成功，任务结束。
已知当前步骤的输出为CheckTableSchemaVersionResult
请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。
请先分析分支情况。你的输出应该为：","{  ""next"": [   {    ""condition"": ""${CheckTableSchemaVersionResult.result == \""是\""}"",    ""action"": ""AdjustTableSettings""   },   {    ""condition"": ""${CheckTableSchemaVersionResult.result == \""否\""}"",    ""action"": ""endNode""   }  ]}",09021920
