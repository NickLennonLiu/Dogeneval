full_template = '你的任务是根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n\n现在请开始回答问题：\n已知所有步骤编号和步骤名为\n{step_info}\n已知当前步骤描述为{step_desc}。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n已知当前步骤的输出为{step_output}，用于选择下一步分支的参数定义为{param_def}。\n请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n请先分析分支情况。'
fields = [{'name': 'step_info', 'description': '所有步骤编号和步骤名'}, {'name': 'step_desc', 'description': '当前步骤描述'}, {'name': 'step_output', 'description': '当前步骤的输出'}, {'name': 'param_def', 'description': '用于选择下一步分支的参数定义'}]
examples = [{'Category': '任务规划-任务分解-告警助理', 'Level1': '任务规划', 'Level2': '任务分解', 'Field': '告警助理', 'Question': '你的任务是根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n举例如下：\n***********************************************************************************************************************\n例1.\n\t已知所有步骤编号和步骤名为\n\t\t步骤1：QueryWeather\n\t\t步骤2：VehicleInfo\n\t\t步骤3：ShipInfo\n\t\t步骤4：StartOut\n\t\t步骤5：StayHome\n\t\t步骤6：QueryHappy\n\t已知当前步骤描述为“查询天气情况，是否为好天气。是=>步骤 3。否=>步骤 2。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n\t已知当前步骤的输出为QueryWeatherResult，用于选择下一步分支的参数定义为{"isWeatherWell": "是否为好天气，取值范围{\\"是\\",\\"否\\"}"}。\n\t请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n\t“是=>步骤 3。否=>步骤 2。”两个“=>”表示next数组中有2个值，因此回答中有两个conditon、action组合。\n\t你的输出应该为：\n\t```\n\t{\n\t\t"next": [\n\t\t\t{\n\t\t\t\t"condition": "${QueryWeatherResult.isWeatherWell == \\"是\\"}",\n\t\t\t\t"action": "ShipInfo"\n\t\t\t},\n\t\t\t{\n\t\t\t\t"condition": "${QueryWeatherResult.isWeatherWell == \\"否\\"}",\n\t\t\t\t"action": "VehicleInfo"\n\t\t\t}\n\t\t]\n\t}\n\t```\n例2.\n\t已知所有步骤编号和步骤名为\n\t\t步骤1：StartOut\n\t\t步骤2：StayHome\n\t\t步骤3：QueryHappy\n\t\t步骤4：EatFood\n\t已知当前步骤描述为 “查询游玩后的心情是否正常。是=>步骤4。否=>告警将自动恢复，诊断结束。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n\t已知当前步骤的输出为QueryHappyResult，用于选择下一步分支的参数定义为{"isHappy": "心情是否好，取值范围{\\"正常\\"，\\"异常\\"}"}。\n\t请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n\t“是=>步骤4。否=>诊断成功，任务结束。”两个“=>”表示next数组中有2个值，因此回答中有两个conditon、action组合。\n\t你的输出应该为：\n\t```\n\t{\n\t\t"next": [\n\t\t\t{\n\t\t\t\t"condition": "${QueryHappyResult.isHappy == \\"正常\\"}",\n\t\t\t\t"action": "EatFood"\n\t\t\t},\n\t\t\t{\n\t\t\t\t"condition": "${QueryHappyResult.isHappy == \\"异常\\"}",\n\t\t\t\t"action": "endNode"\n\t\t\t}\n\t\t]\n\t}\n\t```\n例3.\n\t已知所有步骤编号和步骤名为\n\t\t步骤1：StartOut\n\t\t步骤2：StayHome\n\t\t步骤3：QueryHappy\n\t\t步骤4：EatFood\n\t已知当前步骤描述为 “吃好吃的，给出吃的食物名。诊断结束。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n\t已知当前步骤的输出为EatFoodResult，用于选择下一步分支的参数定义为{"foodName": "食物名，取值范围{\\"正常\\"}"}。\n\t请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n\t“是诊断成功，任务结束。”无“=>”表示next数组中只有1个值，因此回答中有2个conditon、action组合。\n\t你的输出应该为：\n\t```\n\t{\n\t\t"next": [\n\t\t\t{\n\t\t\t\t"condition": "${EatFoodResult.foodName == \\"正常\\"}",\n\t\t\t\t"action": "endNode"\n\t\t\t}\n\t\t]\n\t}\n\t```\n******************************************************************************************************************\n现在请开始回答问题：\n已知所有步骤编号和步骤名为\n\t步骤1：UserCheck0\n\t步骤2：UserCheck1\n\t步骤3：UserCheck2\n\t步骤4：UserCheck3\n\t步骤5：UserCheck4\n\t步骤6：UserCheck5\n\t步骤7：UserCheck6\n\t步骤8：UserCheck7\n\t步骤9：informationCollection8\n\t\t\n已知当前步骤描述为“进行人工操作，检查CloudCG和GSN之间是否有防火墙等。是 => 6。否 => 9。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n已知当前步骤的输出为UserCheck4Result，用于选择下一步分支的参数定义为{"result":"CloudCG和GSN之间是否有防火墙 ，取值范围{\\"是\\"，\\"否\\"}"}。\n请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n请先分析分支情况。你的输出应该为：', 'Answer': '{\n  "next": [\n   {\n    "condition": "${UserCheck4Result.result == \\"是\\"}",\n    "action": "UserCheck5"\n   },\n   {\n    "condition": "${UserCheck4Result.result == \\"否\\"}",\n    "action": "informationCollection8"\n   }\n  ]\n}'}, {'Category': '任务规划-任务分解-告警助理', 'Level1': '任务规划', 'Level2': '任务分解', 'Field': '告警助理', 'Question': '你的任务是根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n举例如下：\n***********************************************************************************************************************\n例1.\n\t已知所有步骤编号和步骤名为\n\t\t步骤1：QueryWeather\n\t\t步骤2：VehicleInfo\n\t\t步骤3：ShipInfo\n\t\t步骤4：StartOut\n\t\t步骤5：StayHome\n\t\t步骤6：QueryHappy\n\t已知当前步骤描述为“查询天气情况，是否为好天气。是=>步骤 3。否=>步骤 2。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n\t已知当前步骤的输出为QueryWeatherResult，用于选择下一步分支的参数定义为{"isWeatherWell": "是否为好天气，取值范围{\\"是\\",\\"否\\"}"}。\n\t请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n\t“是=>步骤 3。否=>步骤 2。”两个“=>”表示next数组中有2个值，因此回答中有两个conditon、action组合。\n\t你的输出应该为：\n\t```\n\t{\n\t\t"next": [\n\t\t\t{\n\t\t\t\t"condition": "${QueryWeatherResult.isWeatherWell == \\"是\\"}",\n\t\t\t\t"action": "ShipInfo"\n\t\t\t},\n\t\t\t{\n\t\t\t\t"condition": "${QueryWeatherResult.isWeatherWell == \\"否\\"}",\n\t\t\t\t"action": "VehicleInfo"\n\t\t\t}\n\t\t]\n\t}\n\t```\n例2.\n\t已知所有步骤编号和步骤名为\n\t\t步骤1：StartOut\n\t\t步骤2：StayHome\n\t\t步骤3：QueryHappy\n\t\t步骤4：EatFood\n\t已知当前步骤描述为 “查询游玩后的心情是否正常。是=>步骤4。否=>告警将自动恢复，诊断结束。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n\t已知当前步骤的输出为QueryHappyResult，用于选择下一步分支的参数定义为{"isHappy": "心情是否好，取值范围{\\"正常\\"，\\"异常\\"}"}。\n\t请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n\t“是=>步骤4。否=>诊断成功，任务结束。”两个“=>”表示next数组中有2个值，因此回答中有两个conditon、action组合。\n\t你的输出应该为：\n\t```\n\t{\n\t\t"next": [\n\t\t\t{\n\t\t\t\t"condition": "${QueryHappyResult.isHappy == \\"正常\\"}",\n\t\t\t\t"action": "EatFood"\n\t\t\t},\n\t\t\t{\n\t\t\t\t"condition": "${QueryHappyResult.isHappy == \\"异常\\"}",\n\t\t\t\t"action": "endNode"\n\t\t\t}\n\t\t]\n\t}\n\t```\n例3.\n\t已知所有步骤编号和步骤名为\n\t\t步骤1：StartOut\n\t\t步骤2：StayHome\n\t\t步骤3：QueryHappy\n\t\t步骤4：EatFood\n\t已知当前步骤描述为 “吃好吃的，给出吃的食物名。诊断结束。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n\t已知当前步骤的输出为EatFoodResult，用于选择下一步分支的参数定义为{"foodName": "食物名，取值范围{\\"正常\\"}"}。\n\t请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n\t“是诊断成功，任务结束。”无“=>”表示next数组中只有1个值，因此回答中有2个conditon、action组合。\n\t你的输出应该为：\n\t```\n\t{\n\t\t"next": [\n\t\t\t{\n\t\t\t\t"condition": "${EatFoodResult.foodName == \\"正常\\"}",\n\t\t\t\t"action": "endNode"\n\t\t\t}\n\t\t]\n\t}\n\t```\n******************************************************************************************************************\n现在请开始回答问题：\n已知所有步骤编号和步骤名为\n\t步骤1：UserCheck0\n\t步骤2：UserCheck1\n\t步骤3：UserCheck2\n\t步骤4：UserCheck3\n\t步骤5：informationCollection4\n\t\t\n已知当前步骤描述为“进行人工操作，依次点开所有应用，单击“应用名称 -> 堆栈名称”查看应用状态是否正常。是 => 步骤 5。否 => 步骤 3。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n已知当前步骤的输出为UserCheck1Result，用于选择下一步分支的参数定义为{"result":"应用状态，取值范围{\\"正常\\"，\\"异常\\"}"}。\n请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n请先分析分支情况。你的输出应该为：', 'Answer': '{\n  "next": [\n    {\n      "condition": "${UserCheck1Result.result == \\"正常\\"}",\n      "action": "informationCollection4"\n    },\n    {\n      "condition": "${UserCheck1Result.result == \\"异常\\"}",\n      "action": "UserCheck2"\n    }\n  ]\n}'}, {'Category': '任务规划-任务分解-告警助理', 'Level1': '任务规划', 'Level2': '任务分解', 'Field': '告警助理', 'Question': '你的任务是根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n举例如下：\n***********************************************************************************************************************\n例1.\n\t已知所有步骤编号和步骤名为\n\t\t步骤1：QueryWeather\n\t\t步骤2：VehicleInfo\n\t\t步骤3：ShipInfo\n\t\t步骤4：StartOut\n\t\t步骤5：StayHome\n\t\t步骤6：QueryHappy\n\t已知当前步骤描述为“查询天气情况，是否为好天气。是=>步骤 3。否=>步骤 2。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n\t已知当前步骤的输出为QueryWeatherResult，用于选择下一步分支的参数定义为{"isWeatherWell": "是否为好天气，取值范围{\\"是\\",\\"否\\"}"}。\n\t请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n\t“是=>步骤 3。否=>步骤 2。”两个“=>”表示next数组中有2个值，因此回答中有两个conditon、action组合。\n\t你的输出应该为：\n\t```\n\t{\n\t\t"next": [\n\t\t\t{\n\t\t\t\t"condition": "${QueryWeatherResult.isWeatherWell == \\"是\\"}",\n\t\t\t\t"action": "ShipInfo"\n\t\t\t},\n\t\t\t{\n\t\t\t\t"condition": "${QueryWeatherResult.isWeatherWell == \\"否\\"}",\n\t\t\t\t"action": "VehicleInfo"\n\t\t\t}\n\t\t]\n\t}\n\t```\n例2.\n\t已知所有步骤编号和步骤名为\n\t\t步骤1：StartOut\n\t\t步骤2：StayHome\n\t\t步骤3：QueryHappy\n\t\t步骤4：EatFood\n\t已知当前步骤描述为 “查询游玩后的心情是否正常。是=>步骤4。否=>告警将自动恢复，诊断结束。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n\t已知当前步骤的输出为QueryHappyResult，用于选择下一步分支的参数定义为{"isHappy": "心情是否好，取值范围{\\"正常\\"，\\"异常\\"}"}。\n\t请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n\t“是=>步骤4。否=>诊断成功，任务结束。”两个“=>”表示next数组中有2个值，因此回答中有两个conditon、action组合。\n\t你的输出应该为：\n\t```\n\t{\n\t\t"next": [\n\t\t\t{\n\t\t\t\t"condition": "${QueryHappyResult.isHappy == \\"正常\\"}",\n\t\t\t\t"action": "EatFood"\n\t\t\t},\n\t\t\t{\n\t\t\t\t"condition": "${QueryHappyResult.isHappy == \\"异常\\"}",\n\t\t\t\t"action": "endNode"\n\t\t\t}\n\t\t]\n\t}\n\t```\n例3.\n\t已知所有步骤编号和步骤名为\n\t\t步骤1：StartOut\n\t\t步骤2：StayHome\n\t\t步骤3：QueryHappy\n\t\t步骤4：EatFood\n\t已知当前步骤描述为 “吃好吃的，给出吃的食物名。诊断结束。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n\t已知当前步骤的输出为EatFoodResult，用于选择下一步分支的参数定义为{"foodName": "食物名，取值范围{\\"正常\\"}"}。\n\t请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n\t“是诊断成功，任务结束。”无“=>”表示next数组中只有1个值，因此回答中有2个conditon、action组合。\n\t你的输出应该为：\n\t```\n\t{\n\t\t"next": [\n\t\t\t{\n\t\t\t\t"condition": "${EatFoodResult.foodName == \\"正常\\"}",\n\t\t\t\t"action": "endNode"\n\t\t\t}\n\t\t]\n\t}\n\t```\n******************************************************************************************************************\n现在请开始回答问题：\n已知所有步骤编号和步骤名为\n\t步骤1：UserCheck0\n\t步骤2：UserCheck1\n\t步骤3：UserCheck2\n\t步骤4：UserCheck3\n\t步骤5：UserCheck4\n\t步骤6：UserCheck5\n\t步骤7：UserCheck6\n\t步骤8：UserCheck7\n\t步骤9：informationCollection8\n\t\t\n已知当前步骤描述为“进行人工操作，根据告警参数“GSN的IP地址”和“GSN的端口”，检查该GSN是否存在，以及端口配置是否正确。是 => 2。否 => 8。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n已知当前步骤的输出为UserCheck0Result，用于选择下一步分支的参数定义为{"gsnExist":"GSN是否存在，取值范围{\\"是\\"，\\"否\\"}"}。\n请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n请先分析分支情况。你的输出应该为：', 'Answer': '{\n  "next": [\n   {\n    "condition": "${UserCheck0Result.gsnExist == \\"是\\"}",\n    "action": "UserCheck1"\n   },\n   {\n    "condition": "${UserCheck0Result.gsnExist == \\"否\\"}",\n    "action": "UserCheck7"\n   }\n  ]\n}'}, {'Category': '任务规划-任务分解-告警助理', 'Level1': '任务规划', 'Level2': '任务分解', 'Field': '告警助理', 'Question': '你的任务是根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n举例如下：\n***********************************************************************************************************************\n例1.\n\t已知所有步骤编号和步骤名为\n\t\t步骤1：QueryWeather\n\t\t步骤2：VehicleInfo\n\t\t步骤3：ShipInfo\n\t\t步骤4：StartOut\n\t\t步骤5：StayHome\n\t\t步骤6：QueryHappy\n\t已知当前步骤描述为“查询天气情况，是否为好天气。是=>步骤 3。否=>步骤 2。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n\t已知当前步骤的输出为QueryWeatherResult，用于选择下一步分支的参数定义为{"isWeatherWell": "是否为好天气，取值范围{\\"是\\",\\"否\\"}"}。\n\t请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n\t“是=>步骤 3。否=>步骤 2。”两个“=>”表示next数组中有2个值，因此回答中有两个conditon、action组合。\n\t你的输出应该为：\n\t```\n\t{\n\t\t"next": [\n\t\t\t{\n\t\t\t\t"condition": "${QueryWeatherResult.isWeatherWell == \\"是\\"}",\n\t\t\t\t"action": "ShipInfo"\n\t\t\t},\n\t\t\t{\n\t\t\t\t"condition": "${QueryWeatherResult.isWeatherWell == \\"否\\"}",\n\t\t\t\t"action": "VehicleInfo"\n\t\t\t}\n\t\t]\n\t}\n\t```\n例2.\n\t已知所有步骤编号和步骤名为\n\t\t步骤1：StartOut\n\t\t步骤2：StayHome\n\t\t步骤3：QueryHappy\n\t\t步骤4：EatFood\n\t已知当前步骤描述为 “查询游玩后的心情是否正常。是=>步骤4。否=>告警将自动恢复，诊断结束。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n\t已知当前步骤的输出为QueryHappyResult，用于选择下一步分支的参数定义为{"isHappy": "心情是否好，取值范围{\\"正常\\"，\\"异常\\"}"}。\n\t请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n\t“是=>步骤4。否=>诊断成功，任务结束。”两个“=>”表示next数组中有2个值，因此回答中有两个conditon、action组合。\n\t你的输出应该为：\n\t```\n\t{\n\t\t"next": [\n\t\t\t{\n\t\t\t\t"condition": "${QueryHappyResult.isHappy == \\"正常\\"}",\n\t\t\t\t"action": "EatFood"\n\t\t\t},\n\t\t\t{\n\t\t\t\t"condition": "${QueryHappyResult.isHappy == \\"异常\\"}",\n\t\t\t\t"action": "endNode"\n\t\t\t}\n\t\t]\n\t}\n\t```\n例3.\n\t已知所有步骤编号和步骤名为\n\t\t步骤1：StartOut\n\t\t步骤2：StayHome\n\t\t步骤3：QueryHappy\n\t\t步骤4：EatFood\n\t已知当前步骤描述为 “吃好吃的，给出吃的食物名。诊断结束。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n\t已知当前步骤的输出为EatFoodResult，用于选择下一步分支的参数定义为{"foodName": "食物名，取值范围{\\"正常\\"}"}。\n\t请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n\t“是诊断成功，任务结束。”无“=>”表示next数组中只有1个值，因此回答中有2个conditon、action组合。\n\t你的输出应该为：\n\t```\n\t{\n\t\t"next": [\n\t\t\t{\n\t\t\t\t"condition": "${EatFoodResult.foodName == \\"正常\\"}",\n\t\t\t\t"action": "endNode"\n\t\t\t}\n\t\t]\n\t}\n\t```\n******************************************************************************************************************\n现在请开始回答问题：\n已知所有步骤编号和步骤名为\n\t步骤1：ConditionalGateway0\n\t步骤2：UserCheck1\n\t步骤3：UserCheck2\n\t步骤4：UserCheck3\n\t步骤5：UserCheck4\n\t步骤6：UserCheck5\n\t步骤7：UserCheck6\n\t步骤8：informationCollection7\n\t\t\n已知当前步骤描述为“进行人工操作，根据OM信息在OM Portal中手动清除告警，然后创建手动备份任务，并启动SFTP远程上传，看是否上传成功。是=>诊断成功，任务结束。否=>步骤 8。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n已知当前步骤的输出为UserCheck6Result，用于选择下一步分支的参数定义为{"success":"操作结果，，取值范围{\\"成功\\"，\\"失败\\"}"}。\n请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n请先分析分支情况。你的输出应该为：', 'Answer': '{\n  "next": [\n   {\n    "condition": "${UserCheck6Result.success == \\"成功\\"}",\n    "action": "endNode"\n   },\n   {\n    "condition": "${UserCheck6Result.success == \\"失败\\"}",\n    "action": "informationCollection7"\n   }\n  ]\n}'}, {'Category': '任务规划-任务分解-告警助理', 'Level1': '任务规划', 'Level2': '任务分解', 'Field': '告警助理', 'Question': '你的任务是根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n举例如下：\n***********************************************************************************************************************\n例1.\n\t已知所有步骤编号和步骤名为\n\t\t步骤1：QueryWeather\n\t\t步骤2：VehicleInfo\n\t\t步骤3：ShipInfo\n\t\t步骤4：StartOut\n\t\t步骤5：StayHome\n\t\t步骤6：QueryHappy\n\t已知当前步骤描述为“查询天气情况，是否为好天气。是=>步骤 3。否=>步骤 2。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n\t已知当前步骤的输出为QueryWeatherResult，用于选择下一步分支的参数定义为{"isWeatherWell": "是否为好天气，取值范围{\\"是\\",\\"否\\"}"}。\n\t请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n\t“是=>步骤 3。否=>步骤 2。”两个“=>”表示next数组中有2个值，因此回答中有两个conditon、action组合。\n\t你的输出应该为：\n\t```\n\t{\n\t\t"next": [\n\t\t\t{\n\t\t\t\t"condition": "${QueryWeatherResult.isWeatherWell == \\"是\\"}",\n\t\t\t\t"action": "ShipInfo"\n\t\t\t},\n\t\t\t{\n\t\t\t\t"condition": "${QueryWeatherResult.isWeatherWell == \\"否\\"}",\n\t\t\t\t"action": "VehicleInfo"\n\t\t\t}\n\t\t]\n\t}\n\t```\n例2.\n\t已知所有步骤编号和步骤名为\n\t\t步骤1：StartOut\n\t\t步骤2：StayHome\n\t\t步骤3：QueryHappy\n\t\t步骤4：EatFood\n\t已知当前步骤描述为 “查询游玩后的心情是否正常。是=>步骤4。否=>告警将自动恢复，诊断结束。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n\t已知当前步骤的输出为QueryHappyResult，用于选择下一步分支的参数定义为{"isHappy": "心情是否好，取值范围{\\"正常\\"，\\"异常\\"}"}。\n\t请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n\t“是=>步骤4。否=>诊断成功，任务结束。”两个“=>”表示next数组中有2个值，因此回答中有两个conditon、action组合。\n\t你的输出应该为：\n\t```\n\t{\n\t\t"next": [\n\t\t\t{\n\t\t\t\t"condition": "${QueryHappyResult.isHappy == \\"正常\\"}",\n\t\t\t\t"action": "EatFood"\n\t\t\t},\n\t\t\t{\n\t\t\t\t"condition": "${QueryHappyResult.isHappy == \\"异常\\"}",\n\t\t\t\t"action": "endNode"\n\t\t\t}\n\t\t]\n\t}\n\t```\n例3.\n\t已知所有步骤编号和步骤名为\n\t\t步骤1：StartOut\n\t\t步骤2：StayHome\n\t\t步骤3：QueryHappy\n\t\t步骤4：EatFood\n\t已知当前步骤描述为 “吃好吃的，给出吃的食物名。诊断结束。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n\t已知当前步骤的输出为EatFoodResult，用于选择下一步分支的参数定义为{"foodName": "食物名，取值范围{\\"正常\\"}"}。\n\t请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n\t“是诊断成功，任务结束。”无“=>”表示next数组中只有1个值，因此回答中有2个conditon、action组合。\n\t你的输出应该为：\n\t```\n\t{\n\t\t"next": [\n\t\t\t{\n\t\t\t\t"condition": "${EatFoodResult.foodName == \\"正常\\"}",\n\t\t\t\t"action": "endNode"\n\t\t\t}\n\t\t]\n\t}\n\t```\n******************************************************************************************************************\n现在请开始回答问题：\n已知所有步骤编号和步骤名为\n\t步骤1：GetAlarmInfo0\n\t步骤2：UserCheck1\n\t步骤3：ConditionalGateway2\n\t步骤4：UserCheck3\n\t步骤5：UserCheck4\n\t步骤6：UserCheck5\n\t步骤7：UserCheck6\n\t步骤8：UserCheck7\n\t步骤9：UserCheck8\n\t步骤10：UserCheck9\n\t步骤11：informationCollection10\n\t\t\n已知当前步骤描述为“进行人工操作，修改鉴权的用户名对应的密码与VNFM上的密码一致，然后查看告警是否清除。是 => 诊断成功，任务结束。否 => 6。”。其中每个“=>”后的内容为步骤编号，前面给出的步骤名一一对应。\n已知当前步骤的输出为UserCheck4Result，用于选择下一步分支的参数定义为{"isAlarmClear":"告警是否清除，取值范围{\\"是\\"，\\"否\\"}"}。\n请根据所有步骤名、当前步骤描述和当前步骤用于选择下一步分支的参数，以JSON格式生成下一步的所有分支情况。当下一步为诊断结束时，action请选择endNode。\n请先分析分支情况。你的输出应该为：', 'Answer': '{\n    "next": [\n        {\n            "condition": "${UserCheck4Result.isAlarmClear == \\"是\\"}",\n            "action": "endNode"\n        },\n        {\n            "condition": "${UserCheck4Result.isAlarmClear == \\"否\\"}",\n            "action": "UserCheck5"\n        }\n    ]\n}'}]
